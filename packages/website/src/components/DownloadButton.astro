---
import { Fragment } from 'react';

let response = await fetch('https://api.github.com/repos/getsentry/spotlight/releases');
const releases = (await response.json()).filter((release:any) => release.name.startsWith('@spotlightjs/electron@'));

let assets = releases[0]?.assets || [];
let version = null;

const links = assets.map((asset: any) => {
  if (asset.name.includes('mac')) {
    const versionMatch = asset.name.match(/Spotlight-(.*)-.*.zip/);
    if (versionMatch) {
      version = versionMatch[1];
    }
    if (asset.name.includes('arm64')) {
      return {
        name: 'macOS (Apple Silicon)',
        url: asset.browser_download_url,
      };
    }
    return {
      name: 'macOS (Intel)',
      url: asset.browser_download_url,
    };
  }
}).filter(Boolean);
---

<style>
  .dropdown .dropdown-menu {
    display: none;
    z-index: 0;
  }

  .dropdown:hover .dropdown-menu {
    display: block;
    z-index: 100;
  }
</style>

<div class="group relative text-center text-sm">
  <div>{
    links.map((link: any) => (
      <a
        href={link.url}
        class="downloadButton !mr-1 inline-flex items-center justify-center px-2 py-2 mx-2 text-base text-s text-white bg-gray-800 border border-transparent rounded-md hover:bg-gray-700 no-underline"
      >
        {link.name}
      </a>
    ))
  }</div>
  <div class="text-xs text-gray-400 mt-2">latest version: {version}</div>
</div>

<script>
  import * as Sentry from '@sentry/astro';
  function incrementDownload(e) {
    console.log('incrementing download', e);
    Sentry.metrics.increment('downloads', 1);
  }

  document.querySelectorAll('.downloadButton').forEach(button => {
    button.addEventListener('click', incrementDownload);
  });
</script>
